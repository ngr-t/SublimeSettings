[
	{
		// Enter normal mode by ctrl+[
		"keys": ["ctrl+["],
		"command": "_enter_normal_mode",
		"context": [
			{
				"key": "setting.command_mode", "operand": false
			},
			{
				"key": "setting.is_widget", "operand": false
			}
		]
	},
	{
		"keys": ["ctrl+enter"],
		"command": "hermes_execute_block"
	},
	// Auto-pair block quotes
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
		]
	},
	{ "keys": ["ctrl+shift+1"], "command": "move_to_group", "args": { "group": 0 } },
	{ "keys": ["ctrl+shift+2"], "command": "move_to_group", "args": { "group": 1 } },
	{ "keys": ["ctrl+shift+3"], "command": "move_to_group", "args": { "group": 2 } },
	{ "keys": ["ctrl+shift+4"], "command": "move_to_group", "args": { "group": 3 } },
	{ "keys": ["ctrl+shift+5"], "command": "move_to_group", "args": { "group": 4 } },
	{ "keys": ["ctrl+shift+6"], "command": "move_to_group", "args": { "group": 5 } },
	{ "keys": ["ctrl+shift+7"], "command": "move_to_group", "args": { "group": 6 } },
	{ "keys": ["ctrl+shift+8"], "command": "move_to_group", "args": { "group": 7 } },
	{ "keys": ["ctrl+shift+9"], "command": "move_to_group", "args": { "group": 8 } },
	{
		"keys": ["ctrl+shift+.", "ctrl+shift+."],
		"command": "insert",
		"args": {
			"characters": " %>%"
		},
	},
	{
		"keys": ["ctrl+shift+,", "ctrl+shift+."],
		"command": "insert",
		"args": {
			"characters": " %<>%"
		},
	},
]
